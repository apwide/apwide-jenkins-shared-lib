@Library('apwide-jenkins-shared-lib') _

pipeline {
    agent any
    environment {
//        APW_JIRA_BASE_URL = 'http://mycompany.com/jira' // these variables can be defined at different level: jenkins global properties, pipeline level, stage level
//        APW_JIRA_CREDENTIALS_ID = 'jira-credentials'
        VERSION_NAME = "2.1.5.0"
        BUILD_NUMBER = currentBuild.number

        DEV_ENV_ID = 6

    }
    parameters {
        choice(name: 'PROMOTE_TO_ENV', choices: ['Dev', 'Demo'], description: 'Should the output be promoted to an environment ?')
    }
    stages {
        stage('Build & Test') { //
            steps {
                script {
                    sh 'sleep 2s' // here is just an example of build stage, build you can define your here, or choose to put on another pipeline
                }
            }
        }
        stage('Deploy on Dev') {
            when {
                equals expected: 'Dev', actual: params.PROMOTE_TO_ENV
            }
            steps {
                sh "sleep 5s" // replace this step with your own deployment procedure

              apwSendEnvironmentInfo([
                  targetEnvironmentAutoCreate: true,
                  targetApplicationName: "eCommerce",
                  targetApplicationAutoCreate: true,
                  targetCategoryName: "Staging",
                  targetCategoryAutoCreate: true,
                  environmentUrl: "https://ecom.stg.apwide.com",
                  environmentAttributes: [
                      Contact: "Max",
                      CPU: "2.8Ghz"
                  ],
                  statusName: "Up",
                  deploymentVersionName: "ECOM-3.0",
                  deploymentAttributes: [
                      Branch: "master",
                      Commit: "SHA-21aa23"
                  ],
                  deploymentBuildNumber: env.BUILD_NUMBER,
                  deploymentDescription: "Deplyoed from Jenkins",
                  deploymentIssueKeys: ["ECOM-20200", "ECOM-20201"]
              ])
            }
        }
    }
}

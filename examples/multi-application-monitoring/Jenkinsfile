@Library('jira-jenkins-shared-lib') _

pipeline {
    agent any
    stages {
        stage('Check eCommerce Dev') {
            steps {
                apwCheckEnvironmentStatus(
                        baseUrl: 'http://jira-ecommerce',
                        credentialsId: 'jira-ecommerce-admin',
                        application: 'eCommerce',
                        category: 'Dev',
                        availableStatus: 'Down',
                        unavailableStatus: 'Up',
                        check: this.&probeEnvironment
                )
            }
        }
        stage('Check eCommerce Demo') {
            steps {
                apwCheckEnvironmentStatus(
                        baseUrl: 'http://jira-ecommerce',
                        credentialsId: 'jira-ecommerce-admin',
                        application: 'eCommerce',
                        category: 'Demo',
                        availableStatus: 'Down',
                        unavailableStatus: 'Up',
                        check: this.&probeEnvironment
                )
            }
        }
        stage('Check eCommerce Production') {
            steps {
                apwCheckEnvironmentStatus(
                        baseUrl: 'http://jira-ecommerce',
                        credentialsId: 'jira-ecommerce-admin',
                        application: 'eCommerce',
                        category: 'Production',
                        availableStatus: 'Down',
                        unavailableStatus: 'Up',
                        check: this.&probeEnvironment
                )
            }
        }
        stage('Check Payment QA') {
            steps {
                apwCheckEnvironmentStatus(
                        baseUrl: 'http://jira-payment/jira',
                        credentialsId: 'jira-payment-admin',
                        application: 'Payment',
                        category: 'QA',
                        availableStatus: 'Dead',
                        unavailableStatus: 'Alive',
                        check: this.&probeEnvironment
                )
            }
        }
        stage('Check Payment Demo') {
            steps {
                apwCheckEnvironmentStatus(
                        baseUrl: 'http://jira-payment/jira',
                        credentialsId: 'jira-payment-admin',
                        application: 'Payment',
                        category: 'Demo',
                        availableStatus: 'Dead',
                        unavailableStatus: 'Alive',
                        check: this.&probeEnvironment
                )
            }
        }
        stage('Check Payment Production') {
            steps {
                apwCheckEnvironmentStatus(
                        baseUrl: 'http://jira-payment/jira',
                        credentialsId: 'jira-payment-admin',
                        application: 'Payment',
                        category: 'Production',
                        availableStatus: 'Dead',
                        unavailableStatus: 'Alive',
                        check: this.&probeEnvironment
                )
            }
        }
    }
}

// provide a closure that receive Apwide Golive Environment in parameter and us its corresponding url to do a check
def probeEnvironment(environment) {
    sh "timeout 5 wget --retry-connrefused --tries=5 --waitretry=1 -q ${environment.url} -O /dev/null"
}
@Library('apwide-jenkins-shared-lib') _

pipeline {
    agent any
    environment {
//        APW_JIRA_BASE_URL = 'http://mycompany.com/jira' // these variables can be defined at different level: jenkins global properties, pipeline level, stage level
//        APW_JIRA_CREDENTIALS_ID = 'jira-credentials'
    }
    parameters {
        choice(name: 'PROMOTE_TO_ENV', choices: ['Dev', 'Demo'], description: 'Should the output be promoted to an environment ?')
    }
    stages {
        stage('Build & Test') { //
            steps {
                script {
                    sh 'sleep 2s' // here is just an example of build stage, build you can define your here, or choose to put on another pipeline
                }
            }
        }
        stage('Deploy on Dev') {
            when {
                equals expected: 'Dev', actual: params.PROMOTE_TO_ENV
            }
            environment {
                APW_ENVIRONMENT_ID = '6'
                ENV_URL = 'http://mycompany.com:8080'
                ENV_OS = 'Windows'
                ENV_OWNER = 'info@apwide.com'
                ENV_DATABASE = 'Oracle'
            }
            steps {
                apwSetEnvironmentStatus status:'Deploy' // update status change to 'Deploy' for environment identified by APW_ENVIRONMENT_ID

                sh "sleep 5s" // replace this step with your own deployment procedure

                apwUpdateEnvironment body:[
                        url: env.ENV_URL,
                        attributes: [
                                OS: env.ENV_OS,
                                Owner: env.ENV_OWNER,
                                Database: env.ENV_DATABASE
                        ]
                ] // update environment information with data we can collect in jenkins for environment identified by APW_ENVIRONMENT_ID

                apwSetDeployedVersion version:currentBuild.number // update deployed version for environment identified by APW_ENVIRONMENT_ID

                apwSetEnvironmentStatus status:'Up' // update status back to Up
            }
        }
        stage('Deploy on Demo') {
            when {
                equals expected: 'Demo', actual: params.PROMOTE_TO_ENV
            }
            environment {
                APW_ENVIRONMENT_ID = '7'
                ENV_URL = 'http://mycompany.com:9000'
                ENV_OS = 'Ubuntu'
                ENV_OWNER = 'support@apwide.com'
                ENV_DATABASE = 'Oracle'
            }
            steps {
                apwSetEnvironmentStatus status:'Deploy' // APW_ENVIRONMENT_ID defined at stage level, so, specific to these steps execution

                sh "sleep 5s" // replace this step with your own deployment procedure

                apwUpdateEnvironment body:[
                        url: env.ENV_URL,
                        attributes: [
                                OS: env.ENV_OS,
                                Owner: env.ENV_OWNER,
                                Database: env.ENV_DATABASE
                        ]
                ]

                apwSetDeployedVersion version:currentBuild.number
                apwSetEnvironmentStatus status:'Up'
            }
        }
    }
}
